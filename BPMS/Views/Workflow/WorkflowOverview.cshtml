@model WorkflowOverviewDTO
@{
    ViewData["title"] = "Workflow";
}
<script src="~/js/Workflow/Workflow.js"></script>
<script>
    const ActiveBlocks = @(Html.Raw(JsonConvert.SerializeObject(Model.ActiveBlocks)));
    const RoleForEdit = "@((bool)ViewData[SystemRoleEnum.WorkflowKeeper.ToString()] || (bool)ViewData[SystemRoleEnum.Admin.ToString()])" == "True";
</script>

<div id="PageNavId" class="page-navbar">
    <div class="d-flex justify-content-between px-4 page-navbar-content">
        <button type="button" class="btn my-auto"><i class="fas fa-info-circle my-auto"></i></button>
        <h1 class="my-auto text-font">@ViewData["title"]</h1>
        <div class="my-auto mr-5"></div>
    </div>
</div>
<div id="PageContentId" class="d-flex pt-3">
    <div id="DetailDivId" class="d-none detail-div">
        <div class="loading-content"></div>
    </div>
    <div id="OverviewDivId" class="container-lg">
        @await Html.PartialAsync("Partial/_WorkflowOverview", Model.Workflows)
    </div>
    <div id="OverviewNavId" class="overview-nav" onclick="FilterChanges(event, '/Workflow/Filter', true)">
        <h2 class="text-font text-center text-filter border-bottom mb-1">Filtrování</h2>
        @foreach (FilterTypeEnum value in Enum.GetValues<FilterTypeEnum>().Where(x => x.ToString().StartsWith("Workflow")))
        {
            <div id="@value" class="filter-div @(ViewBag.Filters[((int)value)] ? "filter-div-sel" : "")">@value.ToLabel()</div>   
        }
    </div>
</div>
