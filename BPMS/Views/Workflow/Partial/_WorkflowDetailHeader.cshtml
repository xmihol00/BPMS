@model WorkflowDetailHeaderDTO

<div class="d-flex justify-content-between px-4 page-navbar-content">
    <button type="button" class="btn my-auto me-5"><i class="fas fa-chevron-circle-left my-auto"></i></button>
    <h1 class="my-auto text-font">Detail workflow</h1>
    <div class="my-auto">
        <button class="butn btn-p" onclick="ShowModal('EditWorklfowId')">Upravit</button>
    </div>
</div>
<form id="EditWorklfowId" class="mx-4 mt-4 mb-3 d-none" action="/Workflow/Edit" oninput="InputValidator(this)" 
      onsubmit="AjaxFormSubmit(event, null, true, false, null, InfoCardUpdate)">
    <input type="hidden" id="WorkflowIdId" name="Id" value="@Model.Id">
    <div class="d-flex justify-content-between align-content-center py-2 px-3 shadow-box mb-3 bg-ddd">
        <h2 class="mb-0">Editace workflow</h2>
        <i class="fas fa-times my-auto close-icon" onclick="HideModal()"></i>
    </div>
    <div class="row">
        <div class="col-6 mt-1">
            <label class="input">
                <input required class="input-field" type="text" placeholder=" " name="Name" value="@Model.Name" />
                <span class="input-label">NÃ¡zev</span>
            </label>
        </div>
        <div class="col-6 mt-1">
            <label class="input">
                <select required class="input-select" name="State">
                    @if (Model.State == WorkflowStateEnum.Finished || Model.State == WorkflowStateEnum.Waiting)
                    {
                        <option value="@Model.State" selected>@Model.State.ToLabel()</option>
                    }
                    else if (Model.State == WorkflowStateEnum.Active)
                    {
                        <option value="@Model.State" selected>@Model.State.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Paused">@WorkflowStateEnum.Paused.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Canceled">@WorkflowStateEnum.Canceled.ToLabel()</option>
                    }
                    else if (Model.State == WorkflowStateEnum.Paused)
                    {
                        <option value="@Model.State" selected>@Model.State.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Active">@WorkflowStateEnum.Active.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Canceled">@WorkflowStateEnum.Canceled.ToLabel()</option>
                    }
                    else if (Model.State == WorkflowStateEnum.Canceled)
                    {
                        <option value="@Model.State" selected>@Model.State.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Active">@WorkflowStateEnum.Active.ToLabel()</option>
                        <option value="@WorkflowStateEnum.Paused">@WorkflowStateEnum.Paused.ToLabel()</option>
                    }
                </select>
                <span class="input-label">Stav</span>
            </label>
        </div>
        <div class="col-12 mt-3">
            <label class="input mb-1">
                <textarea name="Description" class="input-field" placeholder=" ">@Model.Description</textarea>
                <span class="input-label">Popis</span>
            </label>
        </div>
    </div>
    <div class="d-flex justify-content-center mt-2">
        <button form="EditWorklfowId" type="submit" class="butn btn-s">Upravit</button>
    </div>
</form>
<div id="BlockConfigId" class="mx-4 mt-4 mb-2 d-none">
    <div class="d-flex justify-content-between align-content-center py-2 px-3 shadow-box bg-ddd">
        <h2 class="mb-0 text-font">Editace bloku workflow</h2>
        <i class="fas fa-times my-auto close-icon" onclick="HideModal()"></i>
    </div>
    <div id="BlockConfigTargetId">
        <div class="loading-content"></div>
    </div>
</div>
